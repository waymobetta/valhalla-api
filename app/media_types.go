// Code generated by goagen v1.4.1, DO NOT EDIT.
//
// API "valhalla": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/waymobetta/valhalla-api/design
// --out=$(GOPATH)/src/github.com/waymobetta/valhalla-api
// --version=v1.4.1

package app

import (
	"github.com/goadesign/goa"
)

// A standard error response (default view)
//
// Identifier: application/standard_error+json; view=default
type StandardError struct {
	// A code that describes the error
	Code int `form:"code" json:"code" yaml:"code" xml:"code"`
	// A message that describes the error
	Message string `form:"message" json:"message" yaml:"message" xml:"message"`
}

// Validate validates the StandardError media type instance.
func (mt *StandardError) Validate() (err error) {

	if mt.Message == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "message"))
	}
	return
}

// Vis godjkent (default view)
//
// Identifier: application/vnd.godkjent+json; view=default
type Godkjent struct {
	// Ethereum adresse
	Adresse string `form:"adresse" json:"adresse" yaml:"adresse" xml:"adresse"`
	// Navn p√• godkjent
	Navn string `form:"navn" json:"navn" yaml:"navn" xml:"navn"`
}

// Validate validates the Godkjent media type instance.
func (mt *Godkjent) Validate() (err error) {
	if mt.Navn == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "navn"))
	}
	if mt.Adresse == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "adresse"))
	}
	return
}

// GodkjentCollection is the media type for an array of Godkjent (default view)
//
// Identifier: application/vnd.godkjent+json; type=collection; view=default
type GodkjentCollection []*Godkjent

// Validate validates the GodkjentCollection media type instance.
func (mt GodkjentCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// Vis godkjent liste (default view)
//
// Identifier: application/vnd.godkjentliste+json; view=default
type Godkjentliste struct {
	// liste av godkjent
	GodkjentListe GodkjentCollection `form:"godkjentListe" json:"godkjentListe" yaml:"godkjentListe" xml:"godkjentListe"`
}

// Validate validates the Godkjentliste media type instance.
func (mt *Godkjentliste) Validate() (err error) {
	if mt.GodkjentListe == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "godkjentListe"))
	}
	if err2 := mt.GodkjentListe.Validate(); err2 != nil {
		err = goa.MergeErrors(err, err2)
	}
	return
}

// Helse (default view)
//
// Identifier: application/vnd.helse+json; view=default
type Helse struct {
	// Status
	Status string `form:"status" json:"status" yaml:"status" xml:"status"`
}

// Validate validates the Helse media type instance.
func (mt *Helse) Validate() (err error) {
	if mt.Status == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "status"))
	}
	return
}
